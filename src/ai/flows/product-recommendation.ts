
// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for providing product recommendations based on user browsing history.
 *
 * The flow takes user browsing history as input and returns a list of recommended products.
 * It uses a language model to analyze the browsing history and generate relevant product recommendations.
 *
 * @module src/ai/flows/product-recommendation
 *
 * @interface ProductRecommendationInput - The input type for the product recommendation flow.
 * @interface ProductRecommendationOutput - The output type for the product recommendation flow.
 * @function getProductRecommendations - A function that calls the product recommendation flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the input schema for the product recommendation flow
const ProductRecommendationInputSchema = z.object({
  browsingHistory: z
    .string()
    .describe('The browsing history of the user, as a string.'),
});
export type ProductRecommendationInput = z.infer<typeof ProductRecommendationInputSchema>;

// Define the output schema for the product recommendation flow
const ProductRecommendationOutputSchema = z.object({
  recommendedProducts: z
    .string()
    .describe('A list of recommended products based on the browsing history.'),
});
export type ProductRecommendationOutput = z.infer<typeof ProductRecommendationOutputSchema>;

// Exported function to call the flow
export async function getProductRecommendations(
  input: ProductRecommendationInput
): Promise<ProductRecommendationOutput> {
  return productRecommendationFlow(input);
}

// Define the prompt for the product recommendation flow
const productRecommendationPrompt = ai.definePrompt({
  name: 'productRecommendationPrompt',
  input: {schema: ProductRecommendationInputSchema},
  output: {schema: ProductRecommendationOutputSchema},
  prompt: `You are a product recommendation expert.

  Based on the user's browsing history, recommend a list of products that the user might be interested in.

  Browsing History: {{{browsingHistory}}}

  Recommended Products:`, // Handlebars syntax
});

// Define the Genkit flow for product recommendations
const productRecommendationFlow = ai.defineFlow(
  {
    name: 'productRecommendationFlow',
    inputSchema: ProductRecommendationInputSchema,
    outputSchema: ProductRecommendationOutputSchema,
  },
  async input => {
    try {
      const {output} = await productRecommendationPrompt(input);
      if (!output) {
        console.warn('Product recommendation AI returned no output. Returning default.');
        return { recommendedProducts: "No specific recommendations at this time." };
      }
      return output;
    } catch (error) {
      console.error("Error in productRecommendationFlow:", error);
      // Return a default valid response in case of any error during the AI call
      return { recommendedProducts: "Could not fetch recommendations due to an error." };
    }
  }
);
