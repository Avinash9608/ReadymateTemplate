
// This is an autogenerated file from Firebase Studio.

'use server';
/**
 * @fileOverview A Genkit flow to suggest UI components for a page layout based on a user's prompt.
 *
 * - suggestPageLayout - A function that calls the page layout suggestion flow.
 * - PageLayoutSuggestionInput - The input type for the flow.
 * - PageLayoutSuggestionOutput - The return type for the flow.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Define the input schema
const PageLayoutSuggestionInputSchema = z.object({
  pageType: z.string().describe('The general type of page (e.g., "Contact", "Landing Page", "Product Details").'),
  userPrompt: z.string().describe('A natural language description from the user about what the page should contain or do.'),
});
export type PageLayoutSuggestionInput = z.infer<typeof PageLayoutSuggestionInputSchema>;

// Define the output schema
const PageLayoutSuggestionOutputSchema = z.object({
  suggestedComponents: z.array(z.string()).describe('An array of component names suggested for the page layout. Valid components are: "Hero", "TextContent", "ContactForm", "Map", "FAQ", "Image", "Button", "ProductGrid", "TestimonialSlider", "CallToAction".'),
});
export type PageLayoutSuggestionOutput = z.infer<typeof PageLayoutSuggestionOutputSchema>;

// Exported function to call the flow
export async function suggestPageLayout(
  input: PageLayoutSuggestionInput
): Promise<PageLayoutSuggestionOutput> {
  return pageLayoutSuggestionFlow(input);
}

// Define the prompt
const pageLayoutPrompt = ai.definePrompt({
  name: 'pageLayoutSuggestionPrompt',
  input: {schema: PageLayoutSuggestionInputSchema},
  output: {schema: PageLayoutSuggestionOutputSchema},
  prompt: `You are an expert UI/UX designer helping to lay out a webpage.
Based on the user's page type and description, suggest a list of UI components to build the page.
The available component types you can suggest are: "Hero", "TextContent", "ContactForm", "Map", "FAQ", "Image", "Button", "ProductGrid", "TestimonialSlider", "CallToAction".
Return your suggestions as an array of strings in the 'suggestedComponents' field.

Page Type: {{{pageType}}}
User Description: {{{userPrompt}}}

Consider the user's request and select the most appropriate components in a logical order.
For example, if the user asks for "a contact page with company address, phone/email, a Google Map, an inquiry form, and a helpful FAQ",
a good suggestion for 'suggestedComponents' would be: ["Hero", "TextContent", "ContactForm", "Map", "FAQ"].
If the user asks for "a landing page for a new product with a big banner, some feature descriptions, and a buy button",
a good suggestion for 'suggestedComponents' would be: ["Hero", "TextContent", "Image", "TextContent", "CallToAction", "Button"].
`,
});

// Define the Genkit flow
const pageLayoutSuggestionFlow = ai.defineFlow(
  {
    name: 'pageLayoutSuggestionFlow',
    inputSchema: PageLayoutSuggestionInputSchema,
    outputSchema: PageLayoutSuggestionOutputSchema,
  },
  async input => {
    try {
      const {output} = await pageLayoutPrompt(input);
      if (!output) {
        console.warn('Page layout suggestion AI returned no output. Returning default.');
        return { suggestedComponents: ["TextContent"] }; // Provide a minimal default
      }
      return output;
    } catch (error) {
      console.error("Error in pageLayoutSuggestionFlow:", error);
      // Return a default valid response in case of any error during the AI call
      return { suggestedComponents: ["TextContent"] }; // Provide a minimal default
    }
  }
);
